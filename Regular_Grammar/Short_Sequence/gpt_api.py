import openaiimport timefrom openai.error import RateLimitError# Replace 'your-api-key' with your actual OpenAI API keyopenai.api_key = ''def evaluate_model_with_chatgpt(training_positive, training_negative, testing_positive, testing_negative):    prompt = f"""    Evaluate the test strings for a language model 'L' using the given training and testing data.     Training Data:    Positive: {training_positive}    Negative: {training_negative}    Testing Data:    Positive: {testing_positive}    Negative: {testing_negative}    Calculate and print only the  TP, and TN. (Avoid all the other analyses while printing results)    """    max_retries = 5    retry_delay = 1  # Initial delay between retries in seconds    for attempt in range(max_retries):        try:            response = openai.ChatCompletion.create(                model="gpt-3.5-turbo-0125",                messages=[                                        {"role": "user", "content": prompt}                ],                max_tokens=100,                n=1,                stop=None,                temperature=0.5,            )            result = response.choices[0].message['content'].strip()            return result        except RateLimitError as e:            retry_after = e.headers.get('Retry-After', retry_delay)            retry_delay = float(retry_after) if retry_after else retry_delay            print(f"Rate limit reached. Retrying in {retry_delay} seconds.")            time.sleep(retry_delay)            retry_delay = min(retry_delay * 2, 60)  # Exponential backoff with a max cap            if attempt == max_retries - 1:                raise